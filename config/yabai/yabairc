#!/bin/zsh

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_opacity               on
yabai -m config window_shadow                on
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        1.0 #0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  10
yabai -m config bottom_padding               10
yabai -m config left_padding                 10
yabai -m config right_padding                10
yabai -m config window_gap                   10

# create up to 9 Mission Control spaces
SPACES_COUNT="$(yabai -m query --spaces | jq '. | length')"
MISSING_SPACES_COUNT=$((10-$SPACES_COUNT))
echo "Creating $MISSING_SPACES_COUNT spaces"

repeat $MISSING_SPACES_COUNT {
  yabai -m space --create
}

# space labels
yabai -m space 1 --label www
yabai -m space 2 --label dev
yabai -m space 3 --label code
yabai -m space 4 --label term
yabai -m space 5 --label msgs
yabai -m space 6 --label musi


# assign apps to the particular spaces
yabai -m rule --add app="Code" space=3
yabai -m rule --add app="Alacritty" space=4
yabai -m rule --add app="Discord" space=5
yabai -m rule --add app="Slack" space=5
yabai -m rule --add app="^Spotify$" space=6
yabai -m rule --add app="^Endel$" space=6

# disable yabai for particular apps
yabai -m rule --add app="System Preferences" manage=off
yabai -m rule --add app="Bitwarden" manage=off grid=6:4:1:1:2:4
yabai -m rule --add app="AnyConnect" manage=off
yabai -m rule --add app="Kap" manage=off
yabai -m rule --add app="Messages" manage=off
yabai -m rule --add app="Simulator" manage=off # iOS Simulator
yabai -m rule --add app="Mail" manage=off
yabai -m rule --add app="Calendar" manage=off
yabai -m rule --add app="Cron" manage=off
yabai -m rule --add app="Todoist" manage=off
yabai -m rule --add app="Spark" manage=off

# perfectly center floating, nonresizable apps
events=('application_launched')
apps=('System Preferences' 'AnyConnect')

read -r -d '' action <<- 'EOF'
  window="$(yabai -m query --windows --window)"
  display="$(yabai -m query --displays --window)"
  coords="$(jq \
    --argjson window "${window}" \
    --argjson display "${display}" \
    -nr '(($display.frame | .x + .w / 2) - ($window.frame.w / 2) | tostring)
      + ":"
      + (($display.frame | .y + .h / 2) - ($window.frame.h / 2) | tostring)')"
  yabai -m window --move "abs:${coords}"
EOF

(( ${#apps[@]} ))   && app_query="app=\"^($(IFS=\|;echo "${apps[*]}"))\$\""
for event in "${events[@]}"; do
  yabai -m signal --add label="${0}_signal_${event}" event="${event}" \
    $(eval "${app_query}}") action="${action}"
done


# assign Electron to a 2nd space
yabai -m rule --add app="^Electron$" space=2

yabai -m signal --add event=space_changed \
  action="osascript -e 'tell application \"yabai-menubar\" to refresh'"